{"version":3,"sources":["Ui/Splash.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SplashScreenStyle","styled","div","SplashBackgroundStyle","attrs","props","imageSrc","bgColor","SplashTitle","h1","HostButton","h2","button","JoinGameArea","JoinGameInput","input","JoinGameButton","SplashBackground","state","background","src","color","this","loadBackground","a","Math","floor","random","fac","FastAverageColor","getColorAsync","setState","hex","children","React","Component","ChangeNameLink","WelcomeStyle","p","ChosenNameStyle","ChangeNameInput","names","randomName","length","Splash","useState","isChangingName","setIsChangingName","name","setName","type","placeholder","autoFocus","onChange","v","target","value","onKeyPress","i","which","onClick","AppStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deb1be0f.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport FastAverageColor from 'fast-average-color';\n\n\nconst SplashScreenStyle = styled.div`\n  width: 100%;\n  background: #999;\n  text-align: center;\n  height: 100%;\n`\n\ninterface SplashScreenProps {\n  imageSrc: string;\n  bgColor?: string;\n}\n\nexport const SplashBackgroundStyle = styled.div.attrs((props: SplashScreenProps) => ({\n  imageSrc: props.imageSrc,\n  bgColor: props.bgColor || '#555555'\n}))`\n  background-image: url(${props => props.imageSrc});\n  background-color: ${props => props.bgColor};\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  height: 100%;\n`\n\nconst SplashTitle = styled.h1`\n  font-size: 70px;\n  color: #FFDC73;\n  -webkit-text-stroke: 2px #BF9B30;\n  margin: 0;\n  padding: 20px 0 50px 0;\n`\n\nexport const GameTitle = styled.h2`\n  font-size: 30px;\n  color: #FFDC73;\n  -webkit-text-stroke: 2px #BF9B30;\n  margin: 0;\n  padding: 20px 0 50px 0;\n`\n\nconst HostButton = styled.button`\n  border-radius: 0;\n  font-size: 28px;\n  padding: 10px;\n  background: #91a4e6;\n  border: 2px solid #3451b3;\n  width: 400px;\n`\n\nconst JoinGameArea = styled.div`\n  display: flex;\n  margin: 20px auto;\n  width: 400px;\n`\n\nconst JoinGameInput = styled.input`\n  font-size: 28px;\n  padding: 10px;\n  border: 2px solid #ccc;\n  text-align: center;\n  width: 150px;\n`\n\nconst JoinGameButton = styled.button`\n  border-radius: 0;\n  font-size: 28px;\n  padding: 10px;\n  border: 2px solid #2f8a33;\n  background: #5ee465;\n  margin-left: 20px;\n  width: 230px;\n`\ninterface SplashBackgroundProps {\n  children: React.ReactNode,\n  src?: string\n}\ninterface SplashBackgroundState {\n  background: {\n    src: string;\n    color: string;\n  }\n}\n\nexport class SplashBackground extends React.Component<SplashBackgroundProps, SplashBackgroundState> {\n  state: SplashBackgroundState;\n\n  constructor(props: SplashBackgroundProps) {\n    super(props);\n\n    this.state = {\n      background: {\n        src: props.src || '',\n        color: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.loadBackground();\n  }\n\n  async loadBackground() {\n    const src = this.props.src || `/splash/splash${Math.floor(Math.random() * 16)+1}.jpg`;\n    const fac = new FastAverageColor();\n\n    const color = await fac.getColorAsync(src);\n\n    this.setState({ background: { src: src, color: color.hex } });\n  }\n\n  render() {\n    return (\n      <SplashBackgroundStyle imageSrc={this.state.background.src} bgColor={this.state.background.color}>\n        {this.props.children}\n      </SplashBackgroundStyle>\n    );\n  }\n}\n\nconst ChangeNameLink = styled.a`\n  color: #00d9ff;\n  text-decoration: underline;\n  cursor: pointer;\n`\n\nconst WelcomeStyle = styled.p`\n  color: #fff;\n  font-size: 24px;\n  text-shadow: 1px 1px 1px #000;\n  font-weight: bold;\n  user-select: none;\n`\n\nconst ChosenNameStyle = styled.a`\n  border-bottom: 1px dashed #fff;\n  cursor: pointer;\n`\n\nconst ChangeNameInput = styled.input`\n  padding: 2px;\n  font-size: 20px;\n  text-align: center;\n  margin-left: 10px;\n  width: 140px;\n`\n\nconst names = ['Helgi','Finnbogi','Abu','Jean','Samo','Giovanni','LuÃ­s','Jeanne','Gregorio','Domini','Andres','Guglielmo','Hugo','Muhammad', 'Eldad', 'Wulfstan', 'Joseph', 'Aldo', 'Alessio', 'Cosimo', 'Fabritio', 'Francesca', 'Galileo', 'Isabetta', 'Lavinia', 'Madalena', 'Minerva', 'Nencia', 'Vinci'];\n\nconst randomName = names[Math.floor(Math.random()*names.length)];\n\ninterface SplashProps {\n\n}\n\nexport default function Splash(props: SplashProps) {\n  const [isChangingName, setIsChangingName] = useState(false);\n\n  const [name, setName] = useState(randomName);\n\n  const handleEnter = (i: any) => { \n    if (i.which === 13) {\n      setIsChangingName(false);\n    }\n  }\n  \n  return (\n    <SplashScreenStyle>\n      <SplashBackground src={`/splash/splash6.jpg`}>\n        <SplashTitle>Schmeckles</SplashTitle>\n        <WelcomeStyle>\n          Welcome, \n          {isChangingName \n            ? (\n              <ChangeNameInput type=\"text\" placeholder={name} autoFocus={true} onChange={v => setName(v.target.value)} onKeyPress={handleEnter} />\n            )\n            : (\n              <>\n                &nbsp;\n                <ChosenNameStyle onClick={() => setIsChangingName(true)}>{name}</ChosenNameStyle>! \n                &nbsp;\n                <ChangeNameLink onClick={() => setIsChangingName(true)}>Change Name</ChangeNameLink>\n              </>\n            )\n            }\n          \n\n        </WelcomeStyle>\n        <HostButton>\n          Host a game\n        </HostButton>\n        <JoinGameArea>\n          <JoinGameInput type=\"text\" placeholder=\"Code\" />\n          <JoinGameButton>Join Game</JoinGameButton>\n\n        </JoinGameArea>\n      </SplashBackground>\n    </SplashScreenStyle>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport GameUI from './Ui/Game';\nimport Splash, { SplashBackground, GameTitle } from './Ui/Splash';\n\n\n\nconst AppStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst App = () => (\n  <SplashBackground>\n    <AppStyle>\n      <Splash />\n    </AppStyle>\n  </SplashBackground>\n);\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}